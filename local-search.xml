<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>My Tmux</title>
    <link href="/2023/05/28/my-tmux/"/>
    <url>/2023/05/28/my-tmux/</url>
    
    <content type="html"><![CDATA[<p>(Created By <a href="https://github.com/Jaxx4Fun">Jaxx Zhang</a>)</p><p><img src="https://cloud.githubusercontent.com/assets/553208/19740585/85596a5a-9bbf-11e6-8aa1-7c8d9829c008.gif" alt="Screenshot"></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Requirements:</p><ul><li>tmux <strong><code>&gt;= 2.1</code></strong> (soon <code>&gt;= 2.4</code>) running inside Linux, Mac, OpenBSD, Cygwin<br>or WSL</li><li>awk, perl and sed</li><li>outside of tmux, <code>$TERM</code> must be set to <code>xterm-256color</code></li></ul><p>To install, run the following from your terminal: (you may want to backup your<br>existing <code>~/.tmux.conf</code> first)</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span>$ <span class="token function">git</span> clone https://github.com/gpakosz/.tmux.git$ <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> .tmux/.tmux.conf$ <span class="token function">cp</span> .tmux/.tmux.conf.local <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>Then proceed to <a href="#enabling-the-powerline-look">customize</a> your <code>~/.tmux.conf.local</code> copy.</p><p>If you’re a Vim user, setting the <code>$EDITOR</code> environment variable to <code>vim</code> will<br>enable and further customize the vi-style key bindings (see tmux manual).</p><p>If you’re new to tmux, I recommend you read <a href="https://pragprog.com/book/bhtmux2/tmux-2">tmux 2: Productive Mouse-Free<br>Development</a> by <a href="https://twitter.com/bphogan">@bphogan</a>.</p><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><ul><li><p><strong>I’m running tmux <code>HEAD</code> and things don’t work properly. What should I do?</strong></p><p>Please open an issue describing what doesn’t work with upcoming tmux. I’ll do<br>my best to address it.</p></li><li><p><strong>Status line is broken and&#x2F;or gets duplicated at the bottom of the screen.<br>What gives?</strong></p><p>This particularly happens on Linux when the distribution provides a version<br>of glib that received Unicode 9.0 upgrades (glib <code>&gt;= 2.50.1</code>) while providing<br>a version of glibc that didn’t (glibc <code>&lt; 2.26</code>). You may also configure<br><code>LC_CTYPE</code> to use an <code>UTF-8</code> locale. Typically VTE based terminal emulators<br>rely on glib’s <code>g_unichar_iswide()</code> function while tmux relies on glibc’s<br><code>wcwidth()</code> function. When these two functions disagree, display gets messed<br>up.</p><p>This can also happen on macOS when using iTerm2 and “Use Unicode version 9<br>character widths” is enabled in <code>Preferences... &gt; Profiles &gt; Text</code></p><p>For that reason, the default <code>~/.tmux.conf.local</code> file stopped using Unicode<br>characters for which width changed in between Unicode 8.0 and 9.0 standards,<br>as well as Emojis.</p></li><li><p><strong>I installed Powerline and&#x2F;or (patched) fonts but can’t see Powerline<br>symbols.</strong></p><p>First, you don’t need to install Powerline. You only need fonts patched with<br>Powerline symbols or the standalone <code>PowerlineSymbols.otf</code> font. Then make<br>sure your <code>~/.tmux.conf.local</code> copy uses the right code points for<br><code>tmux_conf_theme_left_separator_XXX</code> values.</p></li><li><p><strong>I’m using Bash On Windows (WSL), colors and Powerline look are broken.</strong></p><p>There is currently a <a href="https://github.com/Microsoft/BashOnWindows/issues/1681">bug</a> in the new console powering Bash On Windows<br>preventing text attributes (bold, underscore, …) to combine properly with<br>colors. The workaround is to search your <code>~/.tmux.conf.local</code> copy and<br>replace attributes with <code>&#39;none&#39;</code>.</p><p>Also, until Window’s console replaces its GDI based render with a DirectWrite<br>one, Powerline symbols will be broken.</p><p>The alternative is to use the <a href="https://github.com/mintty/wsltty">Mintty terminal for WSL</a>.</p></li></ul><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li><code>C-a</code> acts as secondary prefix, while keeping default <code>C-b</code> prefix</li><li>visual theme inspired by <a href="https://github.com/Lokaltog/powerline">Powerline</a></li><li><a href="http://pempek.net/articles/2013/04/14/maximizing-tmux-pane-new-window/">maximize any pane to a new window with <code>&lt;prefix&gt; +</code></a></li><li>SSH&#x2F;Mosh aware username and hostname status line information</li><li>mouse mode toggle with <code>&lt;prefix&gt; m</code></li><li>automatic usage of <a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard"><code>reattach-to-user-namespace</code></a><br>if available</li><li>laptop battery status line information</li><li>uptime status line information</li><li>optional highlight of focused pane (tmux <code>&gt;= 2.1</code>)</li><li>configurable new windows and panes behavior (optionally retain current path)</li><li>SSH&#x2F;Mosh aware split pane (reconnects to remote server)</li><li>copy to OS clipboard (needs <a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard"><code>reattach-to-user-namespace</code></a><br>on macOS, <code>xsel</code> or <code>xclip</code> on Linux)</li><li>support for 4-digit hexadecimal Unicode characters (requires <code>perl</code> or Bash &gt;&#x3D; 4.1.2)</li><li><a href="https://facebook.github.io/PathPicker/">Facebook PathPicker</a> integration if available</li><li><a href="https://packages.debian.org/stable/misc/urlview">Urlview</a> integration if available</li></ul><p>The “maximize any pane to a new window with <code>&lt;prefix&gt; +</code>“ feature is different<br>from builtin <code>resize-pane -Z</code> as it allows you to further split a maximized<br>pane. It’s also more flexible by allowing you to maximize a pane to a new<br>window, then change window, then go back and the pane is still in maximized<br>state in its own window. You can then minimize a pane by using <code>&lt;prefix&gt; +</code><br>either from the source window or the maximized window.</p><p><img src="https://cloud.githubusercontent.com/assets/553208/9890858/ee3c0ca6-5c02-11e5-890e-05d825a46c92.gif" alt="Maximize pane"></p><p>Mouse mode allows you to set the active window, set the active pane, resize<br>panes and automatically switches to copy-mode to select text.</p><p><img src="https://cloud.githubusercontent.com/assets/553208/9890797/8dffe542-5c02-11e5-9c06-a25b452e6fcc.gif" alt="Mouse mode"></p><h2 id="Bindings"><a href="#Bindings" class="headerlink" title="Bindings"></a>Bindings</h2><p>tmux may be controlled from an attached client by using a key combination of a<br>prefix key, followed by a command key. This configuration uses <code>C-a</code> as a<br>secondary prefix while keeping <code>C-b</code> as the default prefix. In the following<br>list of key bindings:</p><ul><li><code>&lt;prefix&gt;</code> means you have to either hit <kbd>Ctrl</kbd> + <kbd>a</kbd> or <kbd>Ctrl</kbd> + <kbd>b</kbd></li><li><code>&lt;prefix&gt; c</code> means you have to hit <kbd>Ctrl</kbd> + <kbd>a</kbd> or <kbd>Ctrl</kbd> + <kbd>b</kbd> followed by <kbd>c</kbd></li><li><code>&lt;prefix&gt; C-c</code> means you have to hit <kbd>Ctrl</kbd> + <kbd>a</kbd> or <kbd>Ctrl</kbd> + <kbd>b</kbd> followed by <kbd>Ctrl</kbd> + <kbd>c</kbd></li></ul><p>This configuration uses the following bindings:</p><ul><li><p><code>&lt;prefix&gt; e</code> opens <code>~/.tmux.conf.local</code> with the editor defined by the<br><code>$EDITOR</code> environment variable (defaults to <code>vim</code> when empty)</p></li><li><p><code>&lt;prefix&gt; r</code> reloads the configuration</p></li><li><p><code>C-l</code> clears both the screen and the tmux history</p></li><li><p><code>&lt;prefix&gt; C-c</code> creates a new session</p></li><li><p><code>&lt;prefix&gt; C-f</code> lets you switch to another session by name</p></li><li><p><code>&lt;prefix&gt; C-h</code> and <code>&lt;prefix&gt; C-l</code> let you navigate windows (default<br><code>&lt;prefix&gt; n</code> and <code>&lt;prefix&gt; p</code> are unbound)</p></li><li><p><code>&lt;prefix&gt; Tab</code> brings you to the last active window</p></li><li><p><code>&lt;prefix&gt; -</code> splits the current pane vertically</p></li><li><p><code>&lt;prefix&gt; _</code> splits the current pane horizontally</p></li><li><p><code>&lt;prefix&gt; h</code>, <code>&lt;prefix&gt; j</code>, <code>&lt;prefix&gt; k</code> and <code>&lt;prefix&gt; l</code> let you navigate<br>panes ala Vim</p></li><li><p><code>&lt;prefix&gt; H</code>, <code>&lt;prefix&gt; J</code>, <code>&lt;prefix&gt; K</code>, <code>&lt;prefix&gt; L</code> let you resize panes</p></li><li><p><code>&lt;prefix&gt; &lt;</code> and <code>&lt;prefix&gt; &gt;</code> let you swap panes</p></li><li><p><code>&lt;prefix&gt; +</code> maximizes the current pane to a new window</p></li><li><p><code>&lt;prefix&gt; m</code> toggles mouse mode on or off</p></li><li><p><code>&lt;prefix&gt; U</code> launches Urlview (if available)</p></li><li><p><code>&lt;prefix&gt; F</code> launches Facebook PathPicker (if available)</p></li><li><p><code>&lt;prefix&gt; Enter</code> enters copy-mode</p></li><li><p><code>&lt;prefix&gt; b</code> lists the paste-buffers</p></li><li><p><code>&lt;prefix&gt; p</code> pastes from the top paste-buffer</p></li><li><p><code>&lt;prefix&gt; P</code> lets you choose the paste-buffer to paste from</p></li></ul><p>Additionally, <code>copy-mode-vi</code> matches <a href="https://github.com/gpakosz/.vim.git">my own Vim configuration</a></p><p>Bindings for <code>copy-mode-vi</code>:</p><ul><li><code>v</code> begins selection &#x2F; visual mode</li><li><code>C-v</code> toggles between blockwise visual mode and visual mode</li><li><code>H</code> jumps to the start of line</li><li><code>L</code> jumps to the end of line</li><li><code>y</code> copies the selection to the top paste-buffer</li><li><code>Escape</code> cancels the current operation</li></ul><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>While this configuration tries to bring sane default settings, you may want to<br>customize it further to your needs. Instead of altering the <code>~/.tmux.conf</code> file<br>and diverging from upstream, the proper way is to edit the <code>~/.tmux.conf.local</code><br>file.</p><p>Please refer to the default <code>~/.tmux.conf.local</code> file to know more about<br>variables you can adjust to alter different behaviors. Pressing <code>&lt;prefix&gt; e</code><br>will open <code>~/.tmux.conf.local</code> with the editor defined by the <code>$EDITOR</code><br>environment variable (defaults to <code>vim</code> when empty).</p>]]></content>
    
    
    
    <tags>
      
      <tag>tmux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学习 markdown 语法✍️</title>
    <link href="/2023/05/28/markdown-learning/"/>
    <url>/2023/05/28/markdown-learning/</url>
    
    <content type="html"><![CDATA[<div align=center><img src="https://api.iconify.design/logos:markdown.svg" width="300" align=center></div><hr><p>建议使用-来标记无序列表，因为*容易跟粗体和斜体混淆，而+不流行，因此推荐使用-：</p><ul><li>无序列表1</li><li>无序列表2</li></ul><hr><ol><li>有序列表1</li><li>有序列表2</li></ol><p>“ - [ ] “</p><ul><li><input disabled="" type="checkbox"> 看电影</li><li><input disabled="" type="checkbox"> 看小说</li></ul><p><u>这段文字有下划线<u></u></p><p>&#x3D;&#x3D;高亮的内容&#x3D;&#x3D;前后分别使用两个&#x3D;包裹</p><!--我是注释--><p>在typora中，可以自动获取文章的标题来生成目录，当标题修改时，目录会随之自动更新，使用起来非常方便，其使用语法如下。</p><p>( [TOC] )</p><ol><li><p>TOC是Table of Contents的缩写</p></li><li><p>在想插入的位置输入[TOC]，按回车键就可以自动生成文章的目录。</p></li></ol><hr>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpingBoot后端返回给前端的设计模式</title>
    <link href="/2023/05/28/SpringBoot_Back_To_Front/"/>
    <url>/2023/05/28/SpringBoot_Back_To_Front/</url>
    
    <content type="html"><![CDATA[<p><em><strong>后端数据都是以<font color="#FC78C4">JSON</font>的形式给前端返回，一般都是通过<font color="#FC78C4">@ResponseBody</font>来进行返回。每次返回都要重新格式化一下json的格式。如果接受请求的方法多了，这种返回方式无疑是效率很低的。那么就需要一个类统一管理起来统一管理返回的格式。</strong></em></p><hr><font color="#FC78C4">可以定义一个Result类，用来专门管理返回数据的:</font><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">T</span> data<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">"success"</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token class-name">CodeMsg</span> msg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">CodeMsg</span> msg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeMsg</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">CodeMsg</span> <span class="token function">fillArgs</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> code <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">;</span>        <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CodeMsg</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"SUCESS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CodeMsg</span> <span class="token constant">SERVER_ERROR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500100</span><span class="token punctuation">,</span> <span class="token string">"服务端异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CodeMsg</span> <span class="token constant">BIND_ERROR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500101</span><span class="token punctuation">,</span> <span class="token string">"参数校验异常:%s"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CodeMsg</span> <span class="token constant">PASSWORD_EMPTY</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500211</span><span class="token punctuation">,</span> <span class="token string">"密码不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CodeMsg</span> <span class="token constant">MOBILE_EMPTY</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500211</span><span class="token punctuation">,</span> <span class="token string">"手机号不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CodeMsg</span> <span class="token constant">MOBILE_ERROR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500211</span><span class="token punctuation">,</span> <span class="token string">"手机号格式错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CodeMsg</span> <span class="token constant">USER_NOT_EXITS</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500211</span><span class="token punctuation">,</span> <span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CodeMsg</span> <span class="token constant">PASSWORD_ERROR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodeMsg</span><span class="token punctuation">(</span><span class="token number">500211</span><span class="token punctuation">,</span> <span class="token string">"密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">CodeMsg</span><span class="token punctuation">.</span><span class="token constant">SERVER_ERROR</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
